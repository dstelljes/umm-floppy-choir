---
- hosts: servers
  vars:
    node_version: node_5.x
    node_repo: "deb https://deb.nodesource.com/{{ node_version }} {{ ansible_distribution_release }} main"
  remote_user: pi
  become: yes
  become_method: sudo
  tasks:
  - name: upgrade packages
    apt:
      update_cache: yes
      upgrade: safe
  - name: enable APT over HTTPS
    apt:
      install_recommends: no
      name: apt-transport-https
      state: present
  - name: install NodeSource APT key
    apt_key:
      keyserver: hkp://pool.sks-keyservers.net
      id: 9FD3B784BC1C6FC31A8A0A1C1655A0AB68576280
      state: present
  - name: add NodeSource APT repository
    apt_repository:
      repo: "{{ node_repo }}"
      state: present
  - name: install required packages
    apt:
      install_recommends: no
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
    - build-essential
    - git
    - iptables-persistent
    - nginx
    - nodejs
    - python
  - name: copy firewall rules
    template:
      dest: /etc/iptables/rules.v4
      src: templates/iptables-rules.j2
  - name: load firewall rules
    shell: iptables-restore < /etc/iptables/rules.v4
  - name: create app directory
    file:
      group: pi
      owner: pi
      path: /srv/app
      state: directory
  - name: define app service
    template:
      dest: /etc/systemd/system/floppy-control-app.service
      src: templates/service-definition.j2
  - name: install node dependencies
    npm:
      global: yes
      name: bower
      state: present
  - name: enable app service
    service:
      enabled: yes
      name: floppy-control-app
  - name: install nginx site
    template:
      dest: /etc/nginx/sites-available/default
      src: templates/nginx-site.j2
  - name: enable nginx service
    service:
      enabled: yes
      name: nginx
      state: reloaded
